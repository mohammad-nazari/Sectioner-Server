/* Server_SoapServer.cpp
   Generated by gSOAP 2.8.45 for source.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "Server_SoapH.h"

SOAP_SOURCE_STAMP("@(#) Server_SoapServer.cpp ver 2.8.45 2017-07-14 11:56:53 GMT")
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	soap->keep_alive = soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->keep_alive > 0 && soap->max_keep_alive > 0)
			soap->keep_alive--;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if ((soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap))) && soap->error && soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDeviceStatus"))
		return soap_serve_ns__GetDeviceStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDeviceStatusSMS"))
		return soap_serve_ns__GetDeviceStatusSMS(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetAllDeviceStatus"))
		return soap_serve_ns__GetAllDeviceStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDevicePicture"))
		return soap_serve_ns__GetDevicePicture(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDevicePicturePart"))
		return soap_serve_ns__GetDevicePicturePart(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SetDeviceSetting"))
		return soap_serve_ns__SetDeviceSetting(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SetDeviceSettingSMS"))
		return soap_serve_ns__SetDeviceSettingSMS(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SetAllDeviceSetting"))
		return soap_serve_ns__SetAllDeviceSetting(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:DeleteDevices"))
		return soap_serve_ns__DeleteDevices(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SetDeviceCalibration"))
		return soap_serve_ns__SetDeviceCalibration(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDeviceCalibration"))
		return soap_serve_ns__GetDeviceCalibration(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Login"))
		return soap_serve_ns__Login(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetUserDeviceList"))
		return soap_serve_ns__GetUserDeviceList(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetUsersList"))
		return soap_serve_ns__GetUsersList(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:AddUser"))
		return soap_serve_ns__AddUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:UpdateUser"))
		return soap_serve_ns__UpdateUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:DeleteUser"))
		return soap_serve_ns__DeleteUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:AssignDeviceToUser"))
		return soap_serve_ns__AssignDeviceToUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:DeleteDeviceFromUser"))
		return soap_serve_ns__DeleteDeviceFromUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetUserDevices"))
		return soap_serve_ns__GetUserDevices(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SaveActivityLog"))
		return soap_serve_ns__SaveActivityLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetActivityLog"))
		return soap_serve_ns__GetActivityLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SaveUserLog"))
		return soap_serve_ns__SaveUserLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetUserLog"))
		return soap_serve_ns__GetUserLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SaveDeviceStatusLog"))
		return soap_serve_ns__SaveDeviceStatusLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetDeviceStatusLog"))
		return soap_serve_ns__GetDeviceStatusLog(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetServerOptions"))
		return soap_serve_ns__GetServerOptions(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SetServerOptions"))
		return soap_serve_ns__SetServerOptions(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetCityAndLocations"))
		return soap_serve_ns__GetCityAndLocations(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:ChangeCityName"))
		return soap_serve_ns__ChangeCityName(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:ChangeLocationName"))
		return soap_serve_ns__ChangeLocationName(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:ChangeDeviceName"))
		return soap_serve_ns__ChangeDeviceName(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDeviceStatus(struct soap *soap)
{	struct ns__GetDeviceStatus soap_tmp_ns__GetDeviceStatus;
	ns__Device responseDevice;
	responseDevice.soap_default(soap);
	soap_default_ns__GetDeviceStatus(soap, &soap_tmp_ns__GetDeviceStatus);
	if (!soap_get_ns__GetDeviceStatus(soap, &soap_tmp_ns__GetDeviceStatus, "ns:GetDeviceStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDeviceStatus(soap, soap_tmp_ns__GetDeviceStatus.requestUser, soap_tmp_ns__GetDeviceStatus.requestDevice, responseDevice);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseDevice.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseDevice.soap_put(soap, "ns:Device", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseDevice.soap_put(soap, "ns:Device", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDeviceStatusSMS(struct soap *soap)
{	struct ns__GetDeviceStatusSMS soap_tmp_ns__GetDeviceStatusSMS;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__GetDeviceStatusSMS(soap, &soap_tmp_ns__GetDeviceStatusSMS);
	if (!soap_get_ns__GetDeviceStatusSMS(soap, &soap_tmp_ns__GetDeviceStatusSMS, "ns:GetDeviceStatusSMS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDeviceStatusSMS(soap, soap_tmp_ns__GetDeviceStatusSMS.requestUser, soap_tmp_ns__GetDeviceStatusSMS.requestDevice, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetAllDeviceStatus(struct soap *soap)
{	struct ns__GetAllDeviceStatus soap_tmp_ns__GetAllDeviceStatus;
	ns__UserDevice responseUserDevices;
	responseUserDevices.soap_default(soap);
	soap_default_ns__GetAllDeviceStatus(soap, &soap_tmp_ns__GetAllDeviceStatus);
	if (!soap_get_ns__GetAllDeviceStatus(soap, &soap_tmp_ns__GetAllDeviceStatus, "ns:GetAllDeviceStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetAllDeviceStatus(soap, soap_tmp_ns__GetAllDeviceStatus.requestUser, responseUserDevices);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseUserDevices.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDevicePicture(struct soap *soap)
{	struct ns__GetDevicePicture soap_tmp_ns__GetDevicePicture;
	ns__Device responseDevice;
	responseDevice.soap_default(soap);
	soap_default_ns__GetDevicePicture(soap, &soap_tmp_ns__GetDevicePicture);
	if (!soap_get_ns__GetDevicePicture(soap, &soap_tmp_ns__GetDevicePicture, "ns:GetDevicePicture", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDevicePicture(soap, soap_tmp_ns__GetDevicePicture.requestUser, soap_tmp_ns__GetDevicePicture.requestDevice, responseDevice);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseDevice.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseDevice.soap_put(soap, "ns:Device", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseDevice.soap_put(soap, "ns:Device", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDevicePicturePart(struct soap *soap)
{	struct ns__GetDevicePicturePart soap_tmp_ns__GetDevicePicturePart;
	ns__Device responseDevice;
	responseDevice.soap_default(soap);
	soap_default_ns__GetDevicePicturePart(soap, &soap_tmp_ns__GetDevicePicturePart);
	if (!soap_get_ns__GetDevicePicturePart(soap, &soap_tmp_ns__GetDevicePicturePart, "ns:GetDevicePicturePart", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDevicePicturePart(soap, soap_tmp_ns__GetDevicePicturePart.requestUser, soap_tmp_ns__GetDevicePicturePart.requestDevice, responseDevice);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseDevice.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseDevice.soap_put(soap, "ns:Device", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseDevice.soap_put(soap, "ns:Device", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SetDeviceSetting(struct soap *soap)
{	struct ns__SetDeviceSetting soap_tmp_ns__SetDeviceSetting;
	struct ns__SetDeviceSettingResponse soap_tmp_ns__SetDeviceSettingResponse;
	soap_default_ns__SetDeviceSettingResponse(soap, &soap_tmp_ns__SetDeviceSettingResponse);
	soap_default_ns__SetDeviceSetting(soap, &soap_tmp_ns__SetDeviceSetting);
	if (!soap_get_ns__SetDeviceSetting(soap, &soap_tmp_ns__SetDeviceSetting, "ns:SetDeviceSetting", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SetDeviceSetting(soap, soap_tmp_ns__SetDeviceSetting.requestUser, soap_tmp_ns__SetDeviceSetting.requestDevice, soap_tmp_ns__SetDeviceSettingResponse.responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_ns__SetDeviceSettingResponse(soap, &soap_tmp_ns__SetDeviceSettingResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__SetDeviceSettingResponse(soap, &soap_tmp_ns__SetDeviceSettingResponse, "ns:SetDeviceSettingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__SetDeviceSettingResponse(soap, &soap_tmp_ns__SetDeviceSettingResponse, "ns:SetDeviceSettingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SetDeviceSettingSMS(struct soap *soap)
{	struct ns__SetDeviceSettingSMS soap_tmp_ns__SetDeviceSettingSMS;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SetDeviceSettingSMS(soap, &soap_tmp_ns__SetDeviceSettingSMS);
	if (!soap_get_ns__SetDeviceSettingSMS(soap, &soap_tmp_ns__SetDeviceSettingSMS, "ns:SetDeviceSettingSMS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SetDeviceSettingSMS(soap, soap_tmp_ns__SetDeviceSettingSMS.requestUser, soap_tmp_ns__SetDeviceSettingSMS.requestDevice, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SetAllDeviceSetting(struct soap *soap)
{	struct ns__SetAllDeviceSetting soap_tmp_ns__SetAllDeviceSetting;
	struct ns__SetAllDeviceSettingResponse soap_tmp_ns__SetAllDeviceSettingResponse;
	soap_default_ns__SetAllDeviceSettingResponse(soap, &soap_tmp_ns__SetAllDeviceSettingResponse);
	soap_default_ns__SetAllDeviceSetting(soap, &soap_tmp_ns__SetAllDeviceSetting);
	if (!soap_get_ns__SetAllDeviceSetting(soap, &soap_tmp_ns__SetAllDeviceSetting, "ns:SetAllDeviceSetting", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SetAllDeviceSetting(soap, soap_tmp_ns__SetAllDeviceSetting.requestUser, soap_tmp_ns__SetAllDeviceSetting.requestDevice, soap_tmp_ns__SetAllDeviceSettingResponse.responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_ns__SetAllDeviceSettingResponse(soap, &soap_tmp_ns__SetAllDeviceSettingResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__SetAllDeviceSettingResponse(soap, &soap_tmp_ns__SetAllDeviceSettingResponse, "ns:SetAllDeviceSettingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__SetAllDeviceSettingResponse(soap, &soap_tmp_ns__SetAllDeviceSettingResponse, "ns:SetAllDeviceSettingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__DeleteDevices(struct soap *soap)
{	struct ns__DeleteDevices soap_tmp_ns__DeleteDevices;
	struct ns__DeleteDevicesResponse soap_tmp_ns__DeleteDevicesResponse;
	soap_default_ns__DeleteDevicesResponse(soap, &soap_tmp_ns__DeleteDevicesResponse);
	soap_default_ns__DeleteDevices(soap, &soap_tmp_ns__DeleteDevices);
	if (!soap_get_ns__DeleteDevices(soap, &soap_tmp_ns__DeleteDevices, "ns:DeleteDevices", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__DeleteDevices(soap, soap_tmp_ns__DeleteDevices.requestUser, soap_tmp_ns__DeleteDevices.requestDeviceList, soap_tmp_ns__DeleteDevicesResponse.responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_ns__DeleteDevicesResponse(soap, &soap_tmp_ns__DeleteDevicesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__DeleteDevicesResponse(soap, &soap_tmp_ns__DeleteDevicesResponse, "ns:DeleteDevicesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__DeleteDevicesResponse(soap, &soap_tmp_ns__DeleteDevicesResponse, "ns:DeleteDevicesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SetDeviceCalibration(struct soap *soap)
{	struct ns__SetDeviceCalibration soap_tmp_ns__SetDeviceCalibration;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SetDeviceCalibration(soap, &soap_tmp_ns__SetDeviceCalibration);
	if (!soap_get_ns__SetDeviceCalibration(soap, &soap_tmp_ns__SetDeviceCalibration, "ns:SetDeviceCalibration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SetDeviceCalibration(soap, soap_tmp_ns__SetDeviceCalibration.requestUser, soap_tmp_ns__SetDeviceCalibration.requestDevice, soap_tmp_ns__SetDeviceCalibration.requestCalibrationList, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDeviceCalibration(struct soap *soap)
{	struct ns__GetDeviceCalibration soap_tmp_ns__GetDeviceCalibration;
	ns__CalibrationList responsCalibrationList;
	responsCalibrationList.soap_default(soap);
	soap_default_ns__GetDeviceCalibration(soap, &soap_tmp_ns__GetDeviceCalibration);
	if (!soap_get_ns__GetDeviceCalibration(soap, &soap_tmp_ns__GetDeviceCalibration, "ns:GetDeviceCalibration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDeviceCalibration(soap, soap_tmp_ns__GetDeviceCalibration.requestUser, soap_tmp_ns__GetDeviceCalibration.requestDevice, responsCalibrationList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responsCalibrationList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responsCalibrationList.soap_put(soap, "ns:CalibrationList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responsCalibrationList.soap_put(soap, "ns:CalibrationList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Login(struct soap *soap)
{	struct ns__Login soap_tmp_ns__Login;
	ns__User responseUser;
	responseUser.soap_default(soap);
	soap_default_ns__Login(soap, &soap_tmp_ns__Login);
	if (!soap_get_ns__Login(soap, &soap_tmp_ns__Login, "ns:Login", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Login(soap, soap_tmp_ns__Login.requestUser, responseUser);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseUser.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseUser.soap_put(soap, "ns:User", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseUser.soap_put(soap, "ns:User", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetUserDeviceList(struct soap *soap)
{	struct ns__GetUserDeviceList soap_tmp_ns__GetUserDeviceList;
	ns__UserDevice responseUserDevices;
	responseUserDevices.soap_default(soap);
	soap_default_ns__GetUserDeviceList(soap, &soap_tmp_ns__GetUserDeviceList);
	if (!soap_get_ns__GetUserDeviceList(soap, &soap_tmp_ns__GetUserDeviceList, "ns:GetUserDeviceList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetUserDeviceList(soap, soap_tmp_ns__GetUserDeviceList.requestUser, responseUserDevices);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseUserDevices.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetUsersList(struct soap *soap)
{	struct ns__GetUsersList soap_tmp_ns__GetUsersList;
	ns__UsersList responseUsersList;
	responseUsersList.soap_default(soap);
	soap_default_ns__GetUsersList(soap, &soap_tmp_ns__GetUsersList);
	if (!soap_get_ns__GetUsersList(soap, &soap_tmp_ns__GetUsersList, "ns:GetUsersList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetUsersList(soap, soap_tmp_ns__GetUsersList.requestUser, responseUsersList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseUsersList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseUsersList.soap_put(soap, "ns:UsersList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseUsersList.soap_put(soap, "ns:UsersList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__AddUser(struct soap *soap)
{	struct ns__AddUser soap_tmp_ns__AddUser;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__AddUser(soap, &soap_tmp_ns__AddUser);
	if (!soap_get_ns__AddUser(soap, &soap_tmp_ns__AddUser, "ns:AddUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__AddUser(soap, soap_tmp_ns__AddUser.requestUser, soap_tmp_ns__AddUser.requestNewUser, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__UpdateUser(struct soap *soap)
{	struct ns__UpdateUser soap_tmp_ns__UpdateUser;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__UpdateUser(soap, &soap_tmp_ns__UpdateUser);
	if (!soap_get_ns__UpdateUser(soap, &soap_tmp_ns__UpdateUser, "ns:UpdateUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__UpdateUser(soap, soap_tmp_ns__UpdateUser.requestUser, soap_tmp_ns__UpdateUser.requestNewUser, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__DeleteUser(struct soap *soap)
{	struct ns__DeleteUser soap_tmp_ns__DeleteUser;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__DeleteUser(soap, &soap_tmp_ns__DeleteUser);
	if (!soap_get_ns__DeleteUser(soap, &soap_tmp_ns__DeleteUser, "ns:DeleteUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__DeleteUser(soap, soap_tmp_ns__DeleteUser.requestUser, soap_tmp_ns__DeleteUser.requestDeleteUser, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__AssignDeviceToUser(struct soap *soap)
{	struct ns__AssignDeviceToUser soap_tmp_ns__AssignDeviceToUser;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__AssignDeviceToUser(soap, &soap_tmp_ns__AssignDeviceToUser);
	if (!soap_get_ns__AssignDeviceToUser(soap, &soap_tmp_ns__AssignDeviceToUser, "ns:AssignDeviceToUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__AssignDeviceToUser(soap, soap_tmp_ns__AssignDeviceToUser.requestUser, soap_tmp_ns__AssignDeviceToUser.requestUserDevice, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__DeleteDeviceFromUser(struct soap *soap)
{	struct ns__DeleteDeviceFromUser soap_tmp_ns__DeleteDeviceFromUser;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__DeleteDeviceFromUser(soap, &soap_tmp_ns__DeleteDeviceFromUser);
	if (!soap_get_ns__DeleteDeviceFromUser(soap, &soap_tmp_ns__DeleteDeviceFromUser, "ns:DeleteDeviceFromUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__DeleteDeviceFromUser(soap, soap_tmp_ns__DeleteDeviceFromUser.requestUser, soap_tmp_ns__DeleteDeviceFromUser.requestUserDevice, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetUserDevices(struct soap *soap)
{	struct ns__GetUserDevices soap_tmp_ns__GetUserDevices;
	ns__UserDevice responseUserDevices;
	responseUserDevices.soap_default(soap);
	soap_default_ns__GetUserDevices(soap, &soap_tmp_ns__GetUserDevices);
	if (!soap_get_ns__GetUserDevices(soap, &soap_tmp_ns__GetUserDevices, "ns:GetUserDevices", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetUserDevices(soap, soap_tmp_ns__GetUserDevices.requestUser, soap_tmp_ns__GetUserDevices.requestSelectedUser, responseUserDevices);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseUserDevices.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseUserDevices.soap_put(soap, "ns:UserDevice", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SaveActivityLog(struct soap *soap)
{	struct ns__SaveActivityLog soap_tmp_ns__SaveActivityLog;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SaveActivityLog(soap, &soap_tmp_ns__SaveActivityLog);
	if (!soap_get_ns__SaveActivityLog(soap, &soap_tmp_ns__SaveActivityLog, "ns:SaveActivityLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SaveActivityLog(soap, soap_tmp_ns__SaveActivityLog.requestUser, soap_tmp_ns__SaveActivityLog.requestActivityLog, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetActivityLog(struct soap *soap)
{	struct ns__GetActivityLog soap_tmp_ns__GetActivityLog;
	struct ns__GetActivityLogResponse soap_tmp_ns__GetActivityLogResponse;
	soap_default_ns__GetActivityLogResponse(soap, &soap_tmp_ns__GetActivityLogResponse);
	soap_default_ns__GetActivityLog(soap, &soap_tmp_ns__GetActivityLog);
	if (!soap_get_ns__GetActivityLog(soap, &soap_tmp_ns__GetActivityLog, "ns:GetActivityLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetActivityLog(soap, soap_tmp_ns__GetActivityLog.requestUser, soap_tmp_ns__GetActivityLog.requestReport, soap_tmp_ns__GetActivityLogResponse.responseActivityLog);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_ns__GetActivityLogResponse(soap, &soap_tmp_ns__GetActivityLogResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetActivityLogResponse(soap, &soap_tmp_ns__GetActivityLogResponse, "ns:GetActivityLogResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetActivityLogResponse(soap, &soap_tmp_ns__GetActivityLogResponse, "ns:GetActivityLogResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SaveUserLog(struct soap *soap)
{	struct ns__SaveUserLog soap_tmp_ns__SaveUserLog;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SaveUserLog(soap, &soap_tmp_ns__SaveUserLog);
	if (!soap_get_ns__SaveUserLog(soap, &soap_tmp_ns__SaveUserLog, "ns:SaveUserLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SaveUserLog(soap, soap_tmp_ns__SaveUserLog.requestUser, soap_tmp_ns__SaveUserLog.requestActivityLog, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetUserLog(struct soap *soap)
{	struct ns__GetUserLog soap_tmp_ns__GetUserLog;
	struct ns__GetUserLogResponse soap_tmp_ns__GetUserLogResponse;
	soap_default_ns__GetUserLogResponse(soap, &soap_tmp_ns__GetUserLogResponse);
	soap_default_ns__GetUserLog(soap, &soap_tmp_ns__GetUserLog);
	if (!soap_get_ns__GetUserLog(soap, &soap_tmp_ns__GetUserLog, "ns:GetUserLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetUserLog(soap, soap_tmp_ns__GetUserLog.requestUser, soap_tmp_ns__GetUserLog.requestReport, soap_tmp_ns__GetUserLogResponse.responseActivityLog);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_ns__GetUserLogResponse(soap, &soap_tmp_ns__GetUserLogResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetUserLogResponse(soap, &soap_tmp_ns__GetUserLogResponse, "ns:GetUserLogResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetUserLogResponse(soap, &soap_tmp_ns__GetUserLogResponse, "ns:GetUserLogResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SaveDeviceStatusLog(struct soap *soap)
{	struct ns__SaveDeviceStatusLog soap_tmp_ns__SaveDeviceStatusLog;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SaveDeviceStatusLog(soap, &soap_tmp_ns__SaveDeviceStatusLog);
	if (!soap_get_ns__SaveDeviceStatusLog(soap, &soap_tmp_ns__SaveDeviceStatusLog, "ns:SaveDeviceStatusLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SaveDeviceStatusLog(soap, soap_tmp_ns__SaveDeviceStatusLog.requestUser, soap_tmp_ns__SaveDeviceStatusLog.requestStatusLog, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDeviceStatusLog(struct soap *soap)
{	struct ns__GetDeviceStatusLog soap_tmp_ns__GetDeviceStatusLog;
	ns__DeviceStatusLogList responseStatusLogList;
	responseStatusLogList.soap_default(soap);
	soap_default_ns__GetDeviceStatusLog(soap, &soap_tmp_ns__GetDeviceStatusLog);
	if (!soap_get_ns__GetDeviceStatusLog(soap, &soap_tmp_ns__GetDeviceStatusLog, "ns:GetDeviceStatusLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetDeviceStatusLog(soap, soap_tmp_ns__GetDeviceStatusLog.requestUser, soap_tmp_ns__GetDeviceStatusLog.requestStatusLog, responseStatusLogList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseStatusLogList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseStatusLogList.soap_put(soap, "ns:DeviceStatusLogList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseStatusLogList.soap_put(soap, "ns:DeviceStatusLogList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetServerOptions(struct soap *soap)
{	struct ns__GetServerOptions soap_tmp_ns__GetServerOptions;
	ns__ServerOptions serverOptions;
	serverOptions.soap_default(soap);
	soap_default_ns__GetServerOptions(soap, &soap_tmp_ns__GetServerOptions);
	if (!soap_get_ns__GetServerOptions(soap, &soap_tmp_ns__GetServerOptions, "ns:GetServerOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetServerOptions(soap, soap_tmp_ns__GetServerOptions.requestUser, serverOptions);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	serverOptions.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || serverOptions.soap_put(soap, "ns:ServerOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || serverOptions.soap_put(soap, "ns:ServerOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SetServerOptions(struct soap *soap)
{	struct ns__SetServerOptions soap_tmp_ns__SetServerOptions;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__SetServerOptions(soap, &soap_tmp_ns__SetServerOptions);
	if (!soap_get_ns__SetServerOptions(soap, &soap_tmp_ns__SetServerOptions, "ns:SetServerOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SetServerOptions(soap, soap_tmp_ns__SetServerOptions.requestUser, soap_tmp_ns__SetServerOptions.serverOptions, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCityAndLocations(struct soap *soap)
{	struct ns__GetCityAndLocations soap_tmp_ns__GetCityAndLocations;
	ns__AllCityLocatoins responseCityLocation;
	responseCityLocation.soap_default(soap);
	soap_default_ns__GetCityAndLocations(soap, &soap_tmp_ns__GetCityAndLocations);
	if (!soap_get_ns__GetCityAndLocations(soap, &soap_tmp_ns__GetCityAndLocations, "ns:GetCityAndLocations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetCityAndLocations(soap, soap_tmp_ns__GetCityAndLocations.requestUser, responseCityLocation);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseCityLocation.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseCityLocation.soap_put(soap, "ns:AllCityLocatoins", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseCityLocation.soap_put(soap, "ns:AllCityLocatoins", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ChangeCityName(struct soap *soap)
{	struct ns__ChangeCityName soap_tmp_ns__ChangeCityName;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__ChangeCityName(soap, &soap_tmp_ns__ChangeCityName);
	if (!soap_get_ns__ChangeCityName(soap, &soap_tmp_ns__ChangeCityName, "ns:ChangeCityName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__ChangeCityName(soap, soap_tmp_ns__ChangeCityName.requestUser, soap_tmp_ns__ChangeCityName.oldCityName, soap_tmp_ns__ChangeCityName.newCityName, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ChangeLocationName(struct soap *soap)
{	struct ns__ChangeLocationName soap_tmp_ns__ChangeLocationName;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__ChangeLocationName(soap, &soap_tmp_ns__ChangeLocationName);
	if (!soap_get_ns__ChangeLocationName(soap, &soap_tmp_ns__ChangeLocationName, "ns:ChangeLocationName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__ChangeLocationName(soap, soap_tmp_ns__ChangeLocationName.requestUser, soap_tmp_ns__ChangeLocationName.oldCityName, soap_tmp_ns__ChangeLocationName.newCityName, soap_tmp_ns__ChangeLocationName.oldLocationName, soap_tmp_ns__ChangeLocationName.newLocationName, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ChangeDeviceName(struct soap *soap)
{	struct ns__ChangeDeviceName soap_tmp_ns__ChangeDeviceName;
	ns__ErrorCode responseError;
	responseError.soap_default(soap);
	soap_default_ns__ChangeDeviceName(soap, &soap_tmp_ns__ChangeDeviceName);
	if (!soap_get_ns__ChangeDeviceName(soap, &soap_tmp_ns__ChangeDeviceName, "ns:ChangeDeviceName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__ChangeDeviceName(soap, soap_tmp_ns__ChangeDeviceName.requestUser, soap_tmp_ns__ChangeDeviceName.deviceSerialNumber, soap_tmp_ns__ChangeDeviceName.newCityName, soap_tmp_ns__ChangeDeviceName.newLocationName, soap_tmp_ns__ChangeDeviceName.newDeviceName, responseError);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	responseError.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || responseError.soap_put(soap, "ns:ErrorCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || responseError.soap_put(soap, "ns:ErrorCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of Server_SoapServer.cpp */
